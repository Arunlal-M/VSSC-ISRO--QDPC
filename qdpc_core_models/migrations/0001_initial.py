# Generated by Django 4.2.16 on 2024-12-20 06:05

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=254, unique=True, verbose_name='username')),
                ('desired_salutation', models.CharField(choices=[('Mr.', 'Mr.'), ('Ms.', 'Ms.'), ('Dr.', 'Dr.')], default='Mr.', max_length=10)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number can be blank or in international format.', regex='\\d{0,20}$')])),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('role_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcceptanceTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('sampling_plan', models.FileField(blank=True, null=True, upload_to='acceptance_test_results/')),
                ('reevaluation_frequency_value', models.PositiveIntegerField(default=12)),
                ('reevaluation_frequency_unit', models.CharField(choices=[('months', 'Months'), ('days', 'Days')], default='months', max_length=10)),
                ('test_type', models.CharField(choices=[('quantitative', 'Quantitative'), ('qualitative', 'Qualitative')], default='quantitative', max_length=15)),
                ('test_result', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('precertified', models.BooleanField(blank=True, default=False, null=True)),
                ('shelf_life_type', models.CharField(blank=True, choices=[('tbd', 'TBD (To Be Decided)'), ('not_applicable', 'Not Applicable'), ('add_duration', 'Add Duration')], default='tbd', max_length=20, null=True)),
                ('shelf_life_value', models.FloatField(blank=True, null=True)),
                ('shelf_life_unit', models.CharField(blank=True, choices=[('days', 'Days'), ('months', 'Months')], max_length=10, null=True)),
                ('user_defined_date', models.DateField(default=django.utils.timezone.now)),
                ('acceptance_test', models.ManyToManyField(blank=True, null=True, related_name='components', to='qdpc_core_models.acceptancetest')),
            ],
        ),
        migrations.CreateModel(
            name='Consumable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('precertified', models.BooleanField(blank=True, default=False, null=True)),
                ('shelf_life_type', models.CharField(blank=True, choices=[('tbd', 'TBD (To Be Decided)'), ('not_applicable', 'Not Applicable'), ('add_duration', 'Add Duration')], default='tbd', max_length=20, null=True)),
                ('shelf_life_value', models.FloatField(blank=True, null=True)),
                ('shelf_life_unit', models.CharField(blank=True, choices=[('days', 'Days'), ('months', 'Months')], max_length=10, null=True)),
                ('user_defined_date', models.DateField(default=django.utils.timezone.now)),
                ('acceptance_test', models.ManyToManyField(blank=True, null=True, related_name='consumables', to='qdpc_core_models.acceptancetest')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('center', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='qdpc_core_models.center')),
            ],
            options={
                'verbose_name': 'Division',
                'verbose_name_plural': 'Divisions',
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('DOC/DOCX', '.doc/.docx'), ('PDF', '.pdf'), ('TXT', '.txt'), ('XLS/XLSX', '.xls/.xlsx'), ('CSV', '.csv'), ('PPT/PPTX', '.ppt/.pptx'), ('ODP', '.odp'), ('JPG/JPEG', '.jpg/.jpeg'), ('PNG', '.png'), ('ZIP', '.zip'), ('RAR', '.rar')], default='PDF', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='EndUse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('serial_no', models.CharField(max_length=255, unique=True)),
                ('make', models.CharField(max_length=255)),
                ('last_calibration_date', models.DateField()),
                ('calibration_validity_duration_type', models.CharField(choices=[('days', 'Days'), ('months', 'Months')], max_length=6)),
                ('calibration_validity_duration_value', models.IntegerField()),
                ('calibration_due_date', models.DateField(editable=False)),
                ('calibration_certificate', models.CharField(blank=True, max_length=255, null=True)),
                ('equipment_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.division')),
            ],
        ),
        migrations.CreateModel(
            name='GOCO',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('process_title', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='ProcessingAgency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('agency_type', models.CharField(choices=[('In-house', 'In-house'), ('Industry', 'Industry'), ('GOCO', 'GOCO'), ('In-house + GOCO', 'In-house + GOCO'), ('In-house + Industry', 'In-house + Industry'), ('In-house + GOCO + Industry', 'In-house + GOCO + Industry'), ('GOCO + Industry', 'GOCO + Industry')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ProductComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component_name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('precertified', models.BooleanField(blank=True, default=False, null=True)),
                ('shelf_life_type', models.CharField(blank=True, choices=[('tbd', 'TBD (To Be Decided)'), ('not_applicable', 'Not Applicable'), ('add_duration', 'Add Duration')], default='tbd', max_length=20, null=True)),
                ('shelf_life_value', models.FloatField(blank=True, null=True)),
                ('shelf_life_unit', models.CharField(blank=True, choices=[('days', 'Days'), ('months', 'Months')], max_length=10, null=True)),
                ('user_defined_date', models.DateField(default=django.utils.timezone.now)),
                ('acceptance_test', models.ManyToManyField(blank=True, null=True, related_name='raw_materials', to='qdpc_core_models.acceptancetest')),
                ('grade', models.ManyToManyField(related_name='raw_materials', to='qdpc_core_models.grade')),
            ],
        ),
        migrations.CreateModel(
            name='Sources',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('address', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
            },
        ),
        migrations.CreateModel(
            name='TestingAgency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('abbreviation', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
            ],
            options={
                'verbose_name_plural': 'Roles',
                'ordering': ['name'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='TestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result_file', models.FileField(upload_to='acceptance_test_results/')),
                ('test_date', models.DateField()),
                ('remarks', models.TextField(blank=True, null=True)),
                ('acceptance_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='qdpc_core_models.acceptancetest')),
            ],
        ),
        migrations.CreateModel(
            name='ResetPassword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_key', models.CharField(blank=True, max_length=50, null=True)),
                ('used_status', models.CharField(choices=[(0, 'UNUSED'), (1, 'USED')], default=0, max_length=100)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Reset Password',
            },
        ),
        migrations.CreateModel(
            name='RawMaterialDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_material', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('issue_no', models.CharField(max_length=255)),
                ('revision_no', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='rawmaterial_documents')),
                ('validity', models.IntegerField(help_text='Validity in years')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rawmaterial_documenttype', to='qdpc_core_models.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterialBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('procurement_date', models.DateField()),
                ('batch_size_value', models.FloatField()),
                ('packing_details', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('batch_size_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_sizes', to='qdpc_core_models.unit')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.rawmaterial')),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterialAcceptanceTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.CharField(max_length=255)),
                ('test_value', models.CharField(blank=True, max_length=255, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to='raw_material_acceptance_tests/')),
                ('created_by', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('acceptance_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.acceptancetest')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.grade')),
                ('raw_material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acceptance_tests', to='qdpc_core_models.rawmaterial')),
                ('sources', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.sources')),
                ('suppliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.suppliers')),
            ],
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='sources',
            field=models.ManyToManyField(related_name='raw_materials', to='qdpc_core_models.sources'),
        ),
        migrations.AddField(
            model_name='rawmaterial',
            name='suppliers',
            field=models.ManyToManyField(related_name='raw_materials', to='qdpc_core_models.suppliers'),
        ),
        migrations.CreateModel(
            name='ProductDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('issue_no', models.CharField(max_length=255)),
                ('revision_no', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='productfiles/')),
                ('validity', models.IntegerField(help_text='Validity in years')),
                ('document_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_documenttype', to='qdpc_core_models.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('specific_use', models.TextField(blank=True, null=True)),
                ('shelf_life_type', models.CharField(blank=True, choices=[('tbd', 'TBD (To Be Decided)'), ('not_applicable', 'Not Applicable'), ('add_duration', 'Add Duration')], default='tbd', max_length=20, null=True)),
                ('shelf_life_value', models.FloatField(blank=True, null=True)),
                ('shelf_life_unit', models.CharField(blank=True, choices=[('days', 'Days'), ('months', 'Months')], max_length=10, null=True)),
                ('drawing_number', models.CharField(blank=True, max_length=100, null=True)),
                ('drawing_status', models.CharField(blank=True, choices=[('Provisional', 'Provisional'), ('CCB approved', 'CCB approved')], max_length=50, null=True)),
                ('identification_method', models.CharField(choices=[('Batch Number', 'Product with batch no.'), ('Identification Number', 'Product with identification no.')], max_length=50)),
                ('batch_size', models.TextField(blank=True, null=True)),
                ('prefix', models.CharField(blank=True, max_length=50, null=True)),
                ('suffix', models.CharField(blank=True, max_length=50, null=True)),
                ('drawing_applicable', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], default='no', max_length=3, null=True)),
                ('drawing_title', models.CharField(blank=True, max_length=100, null=True)),
                ('drawing_document', models.FileField(blank=True, null=True, upload_to='drawingfiles/')),
                ('product_document', models.BooleanField(blank=True, default=False, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.productcategory')),
                ('components', models.ManyToManyField(blank=True, to='qdpc_core_models.productcomponent')),
                ('consumable', models.ManyToManyField(blank=True, to='qdpc_core_models.consumable')),
                ('end_uses', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_enduse', to='qdpc_core_models.enduse')),
                ('equipment', models.ManyToManyField(blank=True, to='qdpc_core_models.equipment')),
                ('processing_agencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='qdpc_core_models.division')),
                ('product_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.division')),
                ('rawmaterial', models.ManyToManyField(blank=True, to='qdpc_core_models.rawmaterial')),
                ('testing_agencies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products_testingagency', to='qdpc_core_models.division')),
            ],
        ),
        migrations.CreateModel(
            name='ProcessStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_id', models.PositiveIntegerField()),
                ('process_description', models.TextField(blank=True, null=True)),
                ('process_date', models.DateField()),
                ('rm_status', models.CharField(choices=[('Valid', 'Valid'), ('Material Expired', 'Material Expired')], max_length=50)),
                ('equipment_status', models.CharField(choices=[('Calibration Valid', 'Calibration Valid'), ('Calibration Expired', 'Calibration Expired')], max_length=50)),
                ('process_step_spec', models.TextField()),
                ('measured_value_observation', models.TextField()),
                ('remarks', models.TextField(blank=True)),
                ('component', models.ManyToManyField(related_name='process_steps', to='qdpc_core_models.component')),
                ('consumable', models.ManyToManyField(related_name='process_steps', to='qdpc_core_models.consumable')),
                ('equipment', models.ManyToManyField(related_name='process_steps', to='qdpc_core_models.equipment')),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='process', to='qdpc_core_models.process')),
                ('raw_material', models.ManyToManyField(related_name='process_steps', to='qdpc_core_models.rawmaterial')),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('issue_no', models.CharField(max_length=255)),
                ('revision_no', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='calibration_certificates/')),
                ('validity', models.IntegerField(help_text='Validity in years')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_documenttype', to='qdpc_core_models.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumableDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumable', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('issue_no', models.CharField(max_length=255)),
                ('revision_no', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='consumable_document')),
                ('validity', models.IntegerField(help_text='Validity in years')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='consumable_documenttype', to='qdpc_core_models.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ConsumableBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('procurement_date', models.DateField()),
                ('batch_size_value', models.FloatField()),
                ('packing_details', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('batch_size_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumable_batch_sizes', to='qdpc_core_models.unit')),
                ('consumable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.consumable')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConsumableAcceptanceTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.CharField(max_length=255)),
                ('test_value', models.CharField(blank=True, max_length=255, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to='consumables_acceptance_tests/')),
                ('created_by', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('acceptance_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.acceptancetest')),
                ('consumable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumabe_acceptance_tests', to='qdpc_core_models.consumable')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.grade')),
                ('sources', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.sources')),
                ('suppliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.suppliers')),
            ],
        ),
        migrations.AddField(
            model_name='consumable',
            name='grade',
            field=models.ManyToManyField(related_name='consumables', to='qdpc_core_models.grade'),
        ),
        migrations.AddField(
            model_name='consumable',
            name='sources',
            field=models.ManyToManyField(related_name='consumables', to='qdpc_core_models.sources'),
        ),
        migrations.AddField(
            model_name='consumable',
            name='suppliers',
            field=models.ManyToManyField(related_name='consumables', to='qdpc_core_models.suppliers'),
        ),
        migrations.CreateModel(
            name='ComponentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('issue_no', models.CharField(max_length=255)),
                ('revision_no', models.CharField(max_length=255)),
                ('release_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('document', models.FileField(upload_to='component_documents')),
                ('validity', models.IntegerField(help_text='Validity in years')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='component_documenttype', to='qdpc_core_models.documenttype')),
            ],
        ),
        migrations.CreateModel(
            name='ComponentBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(max_length=100, unique=True)),
                ('procurement_date', models.DateField()),
                ('batch_size_value', models.FloatField()),
                ('packing_details', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('batch_size_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_batch_sizes', to='qdpc_core_models.unit')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.component')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComponentAcceptanceTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batch_id', models.CharField(max_length=255)),
                ('test_value', models.CharField(blank=True, max_length=255, null=True)),
                ('min_value', models.IntegerField(blank=True, null=True)),
                ('max_value', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to='component_acceptance_tests/')),
                ('created_by', models.CharField(max_length=255)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, null=True)),
                ('acceptance_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.acceptancetest')),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='component_acceptance_tests', to='qdpc_core_models.component')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.grade')),
                ('sources', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.sources')),
                ('suppliers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.suppliers')),
            ],
        ),
        migrations.AddField(
            model_name='component',
            name='grade',
            field=models.ManyToManyField(related_name='components', to='qdpc_core_models.grade'),
        ),
        migrations.AddField(
            model_name='component',
            name='sources',
            field=models.ManyToManyField(related_name='components', to='qdpc_core_models.sources'),
        ),
        migrations.AddField(
            model_name='component',
            name='suppliers',
            field=models.ManyToManyField(related_name='components', to='qdpc_core_models.suppliers'),
        ),
        migrations.AddField(
            model_name='center',
            name='user_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.usertype'),
        ),
        migrations.CreateModel(
            name='AcceptanceTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_value', models.FloatField()),
                ('test_date', models.DateField(default=django.utils.timezone.now)),
                ('validity_date', models.DateField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('label', models.CharField(blank=True, max_length=100, null=True)),
                ('acceptance_test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.acceptancetest')),
                ('raw_material_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_results', to='qdpc_core_models.rawmaterialbatch')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.unit')),
            ],
        ),
        migrations.AddField(
            model_name='acceptancetest',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.unit'),
        ),
        migrations.AddField(
            model_name='user',
            name='centre',
            field=models.ManyToManyField(blank=True, related_name='users', to='qdpc_core_models.center'),
        ),
        migrations.AddField(
            model_name='user',
            name='divisions',
            field=models.ManyToManyField(blank=True, null=True, related_name='users', to='qdpc_core_models.division'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ManyToManyField(help_text='Hold down "Control", or "Command" on a Mac, to select more than one.', related_name='test_group', to='qdpc_core_models.role', verbose_name='Roles'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.AddField(
            model_name='user',
            name='usertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='qdpc_core_models.usertype'),
        ),
    ]
